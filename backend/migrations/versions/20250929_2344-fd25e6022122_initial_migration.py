"""Initial migration

Revision ID: fd25e6022122
Revises: 
Create Date: 2025-09-29 23:44:35.809678

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fd25e6022122'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_templates',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('deliverables', sa.JSON(), nullable=True),
    sa.Column('complexity_factors', sa.JSON(), nullable=True),
    sa.Column('resource_requirements', sa.JSON(), nullable=True),
    sa.Column('milestones', sa.JSON(), nullable=True),
    sa.Column('default_contingency', sa.Float(), nullable=True),
    sa.Column('estimated_duration_weeks', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_templates_id'), 'project_templates', ['id'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'MANAGER', 'ENGINEER', 'VIEWER', name='userrole'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('notifications',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notification_type', sa.Enum('PROJECT_CREATED', 'PROJECT_UPDATED', 'PROJECT_APPROVED', 'DELIVERABLE_COMPLETED', 'RESOURCE_ASSIGNED', 'RISK_ALERT', 'MILESTONE_REACHED', 'SYSTEM_ALERT', name='notificationtype'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('link_url', sa.String(length=500), nullable=True),
    sa.Column('entity_type', sa.String(length=100), nullable=True),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('project_code', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=2000), nullable=True),
    sa.Column('size', sa.Enum('SMALL', 'MEDIUM', 'LARGE', name='projectsize'), nullable=False),
    sa.Column('discipline', sa.Enum('CIVIL', 'MECHANICAL', 'ELECTRICAL', 'STRUCTURAL', 'CHEMICAL', 'ENVIRONMENTAL', 'MULTIDISCIPLINE', name='engineeringdiscipline'), nullable=False),
    sa.Column('client_profile', sa.Enum('TYPE_A', 'TYPE_B', 'TYPE_C', 'NEW_CLIENT', name='clientprofile'), nullable=False),
    sa.Column('client_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ESTIMATION', 'REVIEW', 'APPROVED', 'ACTIVE', 'ON_HOLD', 'COMPLETED', 'CANCELLED', name='projectstatus'), nullable=True),
    sa.Column('complexity_factors', sa.JSON(), nullable=True),
    sa.Column('resource_availability', sa.JSON(), nullable=True),
    sa.Column('contingency_percent', sa.Float(), nullable=True),
    sa.Column('confidence_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH', name='confidencelevel'), nullable=True),
    sa.Column('base_hours', sa.Integer(), nullable=True),
    sa.Column('complexity_multiplier', sa.Float(), nullable=True),
    sa.Column('adjusted_hours', sa.Integer(), nullable=True),
    sa.Column('total_hours', sa.Integer(), nullable=True),
    sa.Column('duration_weeks', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_project_status_created', 'projects', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_project_code'), 'projects', ['project_code'], unique=True)
    op.create_index(op.f('ix_projects_status'), 'projects', ['status'], unique=False)
    op.create_table('audit_logs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'APPROVE', 'REJECT', 'SUBMIT', 'EXPORT', 'IMPORT', name='auditaction'), nullable=False),
    sa.Column('entity_type', sa.String(length=100), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('old_values', sa.JSON(), nullable=True),
    sa.Column('new_values', sa.JSON(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_project_id'), 'audit_logs', ['project_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('deliverables',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('milestone', sa.Enum('IFD', 'IFH', 'IFR', 'IFA', 'IFC', name='milestone'), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('actual_start', sa.Date(), nullable=True),
    sa.Column('actual_end', sa.Date(), nullable=True),
    sa.Column('dependencies', sa.JSON(), nullable=True),
    sa.Column('is_critical_path', sa.Boolean(), nullable=True),
    sa.Column('float_days', sa.Integer(), nullable=True),
    sa.Column('progress_percent', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'REVIEW', 'REVISION', 'COMPLETED', 'ON_HOLD', 'CANCELLED', name='deliverablestatus'), nullable=True),
    sa.Column('hours_create', sa.Integer(), nullable=False),
    sa.Column('hours_review', sa.Integer(), nullable=False),
    sa.Column('hours_qa', sa.Integer(), nullable=False),
    sa.Column('hours_doc', sa.Integer(), nullable=False),
    sa.Column('hours_revisions', sa.Integer(), nullable=False),
    sa.Column('hours_pm', sa.Integer(), nullable=False),
    sa.Column('hours_total', sa.Integer(), nullable=False),
    sa.Column('actual_hours_create', sa.Integer(), nullable=True),
    sa.Column('actual_hours_review', sa.Integer(), nullable=True),
    sa.Column('actual_hours_qa', sa.Integer(), nullable=True),
    sa.Column('actual_hours_doc', sa.Integer(), nullable=True),
    sa.Column('actual_hours_revisions', sa.Integer(), nullable=True),
    sa.Column('actual_hours_pm', sa.Integer(), nullable=True),
    sa.Column('actual_hours_total', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deliverables_id'), 'deliverables', ['id'], unique=False)
    op.create_index(op.f('ix_deliverables_project_id'), 'deliverables', ['project_id'], unique=False)
    op.create_table('financial_breakdowns',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('labor_cost', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('overhead_cost', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('materials_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('equipment_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('subcontractor_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('travel_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('direct_cost', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('indirect_cost', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('markup_percent', sa.Float(), nullable=True),
    sa.Column('markup_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('contingency_percent', sa.Float(), nullable=True),
    sa.Column('contingency_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('management_reserve_percent', sa.Float(), nullable=True),
    sa.Column('management_reserve_amount', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('cost_by_role', sa.JSON(), nullable=True),
    sa.Column('cost_by_phase', sa.JSON(), nullable=True),
    sa.Column('cash_flow', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id')
    )
    op.create_index(op.f('ix_financial_breakdowns_id'), 'financial_breakdowns', ['id'], unique=False)
    op.create_table('raci_matrices',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=False),
    sa.Column('task_category', sa.String(length=100), nullable=True),
    sa.Column('role', sa.Enum('RESPONSIBLE', 'ACCOUNTABLE', 'CONSULTED', 'INFORMED', name='racirole'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_raci_matrices_id'), 'raci_matrices', ['id'], unique=False)
    op.create_index(op.f('ix_raci_matrices_project_id'), 'raci_matrices', ['project_id'], unique=False)
    op.create_table('resources',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.Enum('ENGINEER', 'DESIGNER', 'QA_REVIEWER', 'PROJECT_MANAGER', 'TECHNICAL_LEAD', 'DOCUMENT_CONTROLLER', 'EXTERNAL_CONSULTANT', name='resourcetype'), nullable=False),
    sa.Column('allocation_percent', sa.Integer(), nullable=True),
    sa.Column('availability_percent', sa.Integer(), nullable=True),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('allocated_hours', sa.Integer(), nullable=True),
    sa.Column('actual_hours', sa.Integer(), nullable=True),
    sa.Column('remaining_hours', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resources_id'), 'resources', ['id'], unique=False)
    op.create_index(op.f('ix_resources_project_id'), 'resources', ['project_id'], unique=False)
    op.create_table('risk_factors',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('probability_percent', sa.Float(), nullable=False),
    sa.Column('impact_hours', sa.Integer(), nullable=False),
    sa.Column('impact_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
    sa.Column('expected_hours', sa.Integer(), nullable=True),
    sa.Column('expected_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('mitigation_strategy', sa.String(length=1000), nullable=True),
    sa.Column('mitigation_cost', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('residual_probability', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_factors_id'), 'risk_factors', ['id'], unique=False)
    op.create_index(op.f('ix_risk_factors_project_id'), 'risk_factors', ['project_id'], unique=False)
    op.create_table('risk_scenarios',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('scenario_type', sa.Enum('P10', 'P50', 'P90', 'EXPECTED', name='scenariotype'), nullable=False),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.Column('duration_weeks', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('probability_percent', sa.Float(), nullable=False),
    sa.Column('risk_factors', sa.JSON(), nullable=True),
    sa.Column('simulation_date', sa.DateTime(), nullable=True),
    sa.Column('iterations_run', sa.Integer(), nullable=True),
    sa.Column('confidence_interval', sa.Float(), nullable=True),
    sa.Column('mean_value', sa.Float(), nullable=True),
    sa.Column('std_deviation', sa.Float(), nullable=True),
    sa.Column('variance', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id', 'scenario_type', name='uq_project_scenario')
    )
    op.create_index(op.f('ix_risk_scenarios_id'), 'risk_scenarios', ['id'], unique=False)
    op.create_index(op.f('ix_risk_scenarios_project_id'), 'risk_scenarios', ['project_id'], unique=False)
    op.create_table('resource_assignments',
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.Column('deliverable_id', sa.UUID(), nullable=False),
    sa.Column('assigned_hours', sa.Integer(), nullable=False),
    sa.Column('actual_hours', sa.Integer(), nullable=True),
    sa.Column('allocation_percent', sa.Float(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['deliverable_id'], ['deliverables.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resource_assignments_id'), 'resource_assignments', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_resource_assignments_id'), table_name='resource_assignments')
    op.drop_table('resource_assignments')
    op.drop_index(op.f('ix_risk_scenarios_project_id'), table_name='risk_scenarios')
    op.drop_index(op.f('ix_risk_scenarios_id'), table_name='risk_scenarios')
    op.drop_table('risk_scenarios')
    op.drop_index(op.f('ix_risk_factors_project_id'), table_name='risk_factors')
    op.drop_index(op.f('ix_risk_factors_id'), table_name='risk_factors')
    op.drop_table('risk_factors')
    op.drop_index(op.f('ix_resources_project_id'), table_name='resources')
    op.drop_index(op.f('ix_resources_id'), table_name='resources')
    op.drop_table('resources')
    op.drop_index(op.f('ix_raci_matrices_project_id'), table_name='raci_matrices')
    op.drop_index(op.f('ix_raci_matrices_id'), table_name='raci_matrices')
    op.drop_table('raci_matrices')
    op.drop_index(op.f('ix_financial_breakdowns_id'), table_name='financial_breakdowns')
    op.drop_table('financial_breakdowns')
    op.drop_index(op.f('ix_deliverables_project_id'), table_name='deliverables')
    op.drop_index(op.f('ix_deliverables_id'), table_name='deliverables')
    op.drop_table('deliverables')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_project_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_projects_status'), table_name='projects')
    op.drop_index(op.f('ix_projects_project_code'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index('idx_project_status_created', table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_project_templates_id'), table_name='project_templates')
    op.drop_table('project_templates')
    # ### end Alembic commands ###